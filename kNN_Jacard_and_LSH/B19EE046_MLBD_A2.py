# -*- coding: utf-8 -*-
"""B19EE046_MLBD_A2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_cinCrgK8DM1oylwFmUZuAn3CSWSqv0v
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install memory-profiler
!pip install --upgrade psutil
!pip install datasketch

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import gzip
import struct
import time
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import jaccard_score
from sklearn.metrics import classification_report
import scipy
import psutil
from memory_profiler import memory_usage
from sklearn.metrics.pairwise import pairwise_distances
import warnings
from sklearn.exceptions import UndefinedMetricWarning
warnings.filterwarnings('ignore', category=UndefinedMetricWarning)

'''!wget -P /content/drive/MyDrive/MLBD_Assignment_2/ http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz
!wget -P /content/drive/MyDrive/MLBD_Assignment_2/ http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz
!wget -P /content/drive/MyDrive/MLBD_Assignment_2/ http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz
!wget -P /content/drive/MyDrive/MLBD_Assignment_2/ http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz'''

def jaccard_distance(x1, x2):
  return 1 - jaccard_score(x1, x2)

def binarizer(images):
    binary_images = np.where(images > 0, 1, 0).astype('uint8')
    return binary_images

def KNN_Classification(n, mode, tr_img, tr_lab, te_img, te_lab, subset):
  if mode==1:
    knn = KNeighborsClassifier(n_neighbors=n, metric=jaccard_distance, n_jobs=1)
  if mode==2:
    knn = KNeighborsClassifier(n_neighbors=n, metric='jaccard', n_jobs=1)
  if mode==3:
    knn = KNeighborsClassifier(n_neighbors=n, metric=scipy.spatial.distance.jaccard, n_jobs=1)
  start_tr = time.time()
  knn.fit(tr_img, tr_lab)
  end_tr = time.time()
  fit_tr = end_tr - start_tr
  print("Time taken to fit KNN model:", fit_tr, "seconds")
  start_te = time.time()
  te_pred = knn.predict(te_img[:subset+1,:])
  print(classification_report(te_lab[:subset+1], te_pred))
  end_te = time.time()
  fit_te = end_te - start_te
  print("Time taken to evaluate KNN model on test portion:", fit_te, "seconds\n")
  del knn

def KNN_Information(n, mode, tr_img, tr_lab, te_img, te_lab, subset):
  if mode==1:
    knn = KNeighborsClassifier(n_neighbors=n, metric=jaccard_distance, n_jobs=1)
  if mode==2:
    knn = KNeighborsClassifier(n_neighbors=n, metric='jaccard', n_jobs=1)
  if mode==3:
    knn = KNeighborsClassifier(n_neighbors=n, metric=scipy.spatial.distance.jaccard, n_jobs=1)
  mem_usage = memory_usage((knn.fit, (tr_img, tr_lab)), max_usage=True, interval=0.1)
  mem_usage_peak = mem_usage
  mem_usage2 = memory_usage((knn.predict, (te_img[:subset+1,:],)), max_usage=True, interval=0.1)
  mem_usage2_peak = mem_usage2
  ncpus = psutil.cpu_count(logical=False)
  l1_cache_size = 32 * 1024 // ncpus
  l2_cache_size = 256 * 1024 // ncpus
  knn_mem_usage = memory_usage((lambda: (knn, knn._fit_X, knn._y)), interval=0.1)
  knn_mem_usage = np.max(knn_mem_usage) - np.min(knn_mem_usage)
  process = psutil.Process()
  resident_mem_usage = process.memory_info().rss
  virtual_mem_usage = process.memory_info().vms
  cpu_usage = process.cpu_percent()
  num_threads = process.num_threads()
  num_fds = process.num_fds()
  print(f"Peak memory usage during fit function: {mem_usage_peak:.2f} MiB")
  print(f"Peak memory usage during predict function: {mem_usage2_peak:.2f} MiB")
  print(f"L1 cache size: {l1_cache_size / 1024:.2f} KiB")
  print(f"L2 cache size: {l2_cache_size / 1024:.2f} KiB")
  print(f"Memory usage of KNN object and its attributes: {knn_mem_usage:.2f} MiB")
  print(f"Resident memory usage of Python process: {resident_mem_usage / 1024 / 1024:.2f} MiB")
  print(f"Virtual memory usage of Python process: {virtual_mem_usage / 1024 / 1024:.2f} MiB")
  print(f"CPU usage of Python process: {cpu_usage:.2f}%")
  print(f"Number of threads of Python process: {num_threads}")
  print(f"Number of open file descriptors of Python process: {num_fds}")


def LSH_KNN(n, mode, tr_img, tr_lab, te_img, te_lab, subset, n_hashes=30, s=0.9):
  n_cols = tr_img.shape[1]
  hash_funcs = [np.random.permutation(n_cols) for _ in range(n_hashes)]
  train_sig = np.full((tr_img.shape[0], n_hashes), np.inf)
  test_sig = np.full((te_img.shape[0], n_hashes), np.inf)
  for i in range(tr_img.shape[0]):
    for j in range(n_hashes):
      idx = np.argmax(tr_img[i, hash_funcs[j]]) 
      train_sig[i, j] = idx
  for i in range(te_img.shape[0]):
    for j in range(n_hashes):
      idx = np.argmax(te_img[i, hash_funcs[j]])
      test_sig[i, j] = idx
  distances = pairwise_distances(train_sig, test_sig, metric='jaccard')
  similarities = 1 - distances
  similarities[similarities < s] = 0
  if mode==1:
    knn = KNeighborsClassifier(n_neighbors=n, metric=jaccard_distance, n_jobs=1)
  if mode==2:
    knn = KNeighborsClassifier(n_neighbors=n, metric='jaccard', n_jobs=1)
  if mode==3:
    knn = KNeighborsClassifier(n_neighbors=n, metric=scipy.spatial.distance.jaccard, n_jobs=1)
  start_tr = time.time()
  knn.fit(train_sig, tr_lab)
  end_tr = time.time()
  fit_tr = end_tr - start_tr
  print("Time taken to fit KNN model:", fit_tr, "seconds")
  start_te = time.time()
  te_pred = knn.predict(test_sig[:subset+1,:])
  print(classification_report(te_lab[:subset+1], te_pred))
  end_te = time.time()
  fit_te = end_te - start_te
  print("Time taken to evaluate KNN model on test portion:", fit_te, "seconds\n")
  del knn

def LSH_Information(n, mode, tr_img, tr_lab, te_img, te_lab, subset, n_hashes=30, s=0.9):
  n_cols = tr_img.shape[1]
  hash_funcs = [np.random.permutation(n_cols) for _ in range(n_hashes)]
  train_sig = np.full((tr_img.shape[0], n_hashes), np.inf)
  test_sig = np.full((te_img.shape[0], n_hashes), np.inf)
  for i in range(tr_img.shape[0]):
    for j in range(n_hashes):
      idx = np.argmax(tr_img[i, hash_funcs[j]]) 
      train_sig[i, j] = idx
  for i in range(te_img.shape[0]):
    for j in range(n_hashes):
      idx = np.argmax(te_img[i, hash_funcs[j]])
      test_sig[i, j] = idx
  distances = pairwise_distances(train_sig, test_sig, metric='jaccard')
  similarities = 1 - distances
  similarities[similarities < s] = 0
  if mode==1:
    knn = KNeighborsClassifier(n_neighbors=n, metric=jaccard_distance, n_jobs=1)
  if mode==2:
    knn = KNeighborsClassifier(n_neighbors=n, metric='jaccard', n_jobs=1)
  if mode==3:
    knn = KNeighborsClassifier(n_neighbors=n, metric=scipy.spatial.distance.jaccard, n_jobs=1)
  mem_usage = memory_usage((knn.fit, (train_sig, tr_lab)), max_usage=True, interval=0.1)
  mem_usage_peak = mem_usage
  mem_usage2 = memory_usage((knn.predict, (test_sig[:subset+1,:],)), max_usage=True, interval=0.1)
  mem_usage2_peak = mem_usage2
  ncpus = psutil.cpu_count(logical=False)
  l1_cache_size = 32 * 1024 // ncpus
  l2_cache_size = 256 * 1024 // ncpus
  knn_mem_usage = memory_usage((lambda: (knn, knn._fit_X, knn._y)), interval=0.1)
  knn_mem_usage = np.max(knn_mem_usage) - np.min(knn_mem_usage)
  process = psutil.Process()
  resident_mem_usage = process.memory_info().rss
  virtual_mem_usage = process.memory_info().vms
  cpu_usage = process.cpu_percent()
  num_threads = process.num_threads()
  num_fds = process.num_fds()
  print(f"Peak memory usage during fit function: {mem_usage_peak:.2f} MiB")
  print(f"Peak memory usage during predict function: {mem_usage2_peak:.2f} MiB")
  print(f"L1 cache size: {l1_cache_size / 1024:.2f} KiB")
  print(f"L2 cache size: {l2_cache_size / 1024:.2f} KiB")
  print(f"Memory usage of KNN object and its attributes: {knn_mem_usage:.2f} MiB")
  print(f"Resident memory usage of Python process: {resident_mem_usage / 1024 / 1024:.2f} MiB")
  print(f"Virtual memory usage of Python process: {virtual_mem_usage / 1024 / 1024:.2f} MiB")
  print(f"CPU usage of Python process: {cpu_usage:.2f}%")
  print(f"Number of threads of Python process: {num_threads}")
  print(f"Number of open file descriptors of Python process: {num_fds}")
  del knn, similarities

with gzip.open('/content/drive/MyDrive/MLBD_Assignment_2/train-images-idx3-ubyte.gz', 'rb') as f:
    _, num_images, num_rows, num_cols = struct.unpack('>IIII', f.read(16))
    images_binary = f.read(num_images*num_rows*num_cols)
    tr_images = np.frombuffer(images_binary, dtype=np.uint8)
    tr_images = tr_images.reshape(num_images, num_rows, num_cols)

with gzip.open('/content/drive/MyDrive/MLBD_Assignment_2/train-labels-idx1-ubyte.gz', 'rb') as f:
    _, num_labels = struct.unpack('>II', f.read(8))
    labels_binary = f.read(num_labels)
    tr_labels = np.frombuffer(labels_binary, dtype=np.uint8)

with gzip.open('/content/drive/MyDrive/MLBD_Assignment_2/t10k-images-idx3-ubyte.gz', 'rb') as f:
    _, num_images, num_rows, num_cols = struct.unpack('>IIII', f.read(16))
    images_binary = f.read(num_images*num_rows*num_cols)
    te_images = np.frombuffer(images_binary, dtype=np.uint8)
    te_images = te_images.reshape(num_images, num_rows, num_cols)

with gzip.open('/content/drive/MyDrive/MLBD_Assignment_2/t10k-labels-idx1-ubyte.gz', 'rb') as f:
    _, num_labels = struct.unpack('>II', f.read(8))
    labels_binary = f.read(num_labels)
    te_labels = np.frombuffer(labels_binary, dtype=np.uint8)

tr_images = tr_images.reshape(tr_images.shape[0],-1)
te_images = te_images.reshape(te_images.shape[0],-1)
print(tr_images.shape, te_images.shape)

tr_images, te_images = binarizer(tr_images), binarizer(te_images)

"""# With Custom Function

## Without LSH

### Time and Accuracy
"""

for imgs in [10,60,90]:  
  for k in [1,2,3,4,5]:
    KNN_Classification(k, 1, tr_images, tr_labels, te_images, te_labels, imgs)

"""### Memory related information for imgs=10"""

KNN_Information(1, 1, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(2, 1, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(3, 1, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(4, 1, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(5, 1, tr_images, tr_labels, te_images, te_labels, 10)

"""### Memory related information for imgs=60"""

KNN_Information(1, 1, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(2, 1, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(3, 1, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(4, 1, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(5, 1, tr_images, tr_labels, te_images, te_labels, 60)

"""### Memory related information for imgs=90"""

KNN_Information(1, 1, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(2, 1, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(3, 1, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(4, 1, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(5, 1, tr_images, tr_labels, te_images, te_labels, 90)

"""# With Jaccard Distance Inbuilt function in sklearn

## Without LSH

### Time and Accuracy
"""

KNN_Classification(1,2,tr_images,tr_labels,te_images,te_labels,10)
KNN_Classification(2,2,tr_images,tr_labels,te_images,te_labels,10)
KNN_Classification(3,2,tr_images,tr_labels,te_images,te_labels,10)
KNN_Classification(4,2,tr_images,tr_labels,te_images,te_labels,10)
KNN_Classification(5,2,tr_images,tr_labels,te_images,te_labels,10)

KNN_Classification(1,2,tr_images,tr_labels,te_images,te_labels,60)
KNN_Classification(2,2,tr_images,tr_labels,te_images,te_labels,60)
KNN_Classification(3,2,tr_images,tr_labels,te_images,te_labels,60)
KNN_Classification(4,2,tr_images,tr_labels,te_images,te_labels,60)
KNN_Classification(5,2,tr_images,tr_labels,te_images,te_labels,60)

KNN_Classification(1,2,tr_images,tr_labels,te_images,te_labels,90)
KNN_Classification(2,2,tr_images,tr_labels,te_images,te_labels,90)
KNN_Classification(3,2,tr_images,tr_labels,te_images,te_labels,90)
KNN_Classification(4,2,tr_images,tr_labels,te_images,te_labels,90)
KNN_Classification(5,2,tr_images,tr_labels,te_images,te_labels,90)

KNN_Classification(1,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0])
KNN_Classification(2,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0])
KNN_Classification(3,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0])
KNN_Classification(4,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0])

"""### Memory related information for imgs=10"""

KNN_Information(1, 2, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(2, 2, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(3, 2, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(4, 2, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(5, 2, tr_images, tr_labels, te_images, te_labels, 10)

"""### Memory related information for imgs=60"""

KNN_Information(1, 2, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(2, 2, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(3, 2, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(4, 2, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(5, 2, tr_images, tr_labels, te_images, te_labels, 60)

"""### Memory related information for imgs=90"""

KNN_Information(1, 2, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(2, 2, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(3, 2, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(4, 2, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(5, 2, tr_images, tr_labels, te_images, te_labels, 90)

"""### Memory related information for all test images"""

KNN_Information(1, 2, tr_images, tr_labels, te_images, te_labels, te_images.shape[0])

KNN_Information(2, 2, tr_images, tr_labels, te_images, te_labels, te_images.shape[0])

KNN_Information(3, 2, tr_images, tr_labels, te_images, te_labels, te_images.shape[0])

KNN_Information(4, 2, tr_images, tr_labels, te_images, te_labels, te_images.shape[0])

KNN_Information(5, 2, tr_images, tr_labels, te_images, te_labels, te_images.shape[0])

"""## With LSH

### Time and Accuracy
"""

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.8)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.8)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.8)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.8)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.8)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.9)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.9)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.9)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.9)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],40,0.9)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.8)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.8)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.8)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.8)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.8)

LSH_KNN(1,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.9)
LSH_KNN(2,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.9)
LSH_KNN(3,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.9)
LSH_KNN(4,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.9)
LSH_KNN(5,2,tr_images,tr_labels,te_images,te_labels,te_images.shape[0],60,0.9)

"""### Memory related information for imgs=10"""

LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

"""### Memory related information for imgs=60"""

LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

"""### Memory related information for imgs=90"""

LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")

LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")

LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")

LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")

LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")

"""### Memory related information for all test images"""

LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.8)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.9)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.8)
print(" ")
LSH_Information(1,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.9)
print(" ")

LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.8)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.9)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.8)
print(" ")
LSH_Information(2,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.9)
print(" ")

LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.8)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.9)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.8)
print(" ")
LSH_Information(3,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.9)
print(" ")

LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.8)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.9)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.8)
print(" ")
LSH_Information(4,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.9)
print(" ")

LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.8)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],40,0.9)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.8)
print(" ")
LSH_Information(5,2,tr_images,tr_labels,te_images,te_labels, te_images.shape[0],60,0.9)
print(" ")

"""# With Scipy Jaccard-Needham Dissimilarity

## Without LSH

### Time and Accuracy
"""

KNN_Classification(1,3,tr_images,tr_labels,te_images,te_labels,10)
KNN_Classification(2,3,tr_images,tr_labels,te_images,te_labels,10)
KNN_Classification(3,3,tr_images,tr_labels,te_images,te_labels,10)
KNN_Classification(4,3,tr_images,tr_labels,te_images,te_labels,10)
KNN_Classification(5,3,tr_images,tr_labels,te_images,te_labels,10)

KNN_Classification(1,3,tr_images,tr_labels,te_images,te_labels,60)
KNN_Classification(2,3,tr_images,tr_labels,te_images,te_labels,60)
KNN_Classification(3,3,tr_images,tr_labels,te_images,te_labels,60)
KNN_Classification(4,3,tr_images,tr_labels,te_images,te_labels,60)
KNN_Classification(5,3,tr_images,tr_labels,te_images,te_labels,60)

KNN_Classification(1,3,tr_images,tr_labels,te_images,te_labels,90)
KNN_Classification(2,3,tr_images,tr_labels,te_images,te_labels,90)
KNN_Classification(3,3,tr_images,tr_labels,te_images,te_labels,90)
KNN_Classification(4,3,tr_images,tr_labels,te_images,te_labels,90)
KNN_Classification(5,3,tr_images,tr_labels,te_images,te_labels,90)

"""### Memory related information for imgs=10"""

KNN_Information(1, 3, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(2, 3, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(3, 3, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(4, 3, tr_images, tr_labels, te_images, te_labels, 10)

KNN_Information(5, 3, tr_images, tr_labels, te_images, te_labels, 10)

"""### Memory related information for imgs=60"""

KNN_Information(1, 3, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(2, 3, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(3, 3, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(4, 3, tr_images, tr_labels, te_images, te_labels, 60)

KNN_Information(5, 3, tr_images, tr_labels, te_images, te_labels, 60)

"""### Memory related information for imgs=90"""

KNN_Information(1, 3, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(2, 3, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(3, 3, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(4, 3, tr_images, tr_labels, te_images, te_labels, 90)

KNN_Information(5, 3, tr_images, tr_labels, te_images, te_labels, 90)

"""## With LSH

### Time and Accuracy
"""

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)

LSH_KNN(1,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
LSH_KNN(2,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
LSH_KNN(3,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
LSH_KNN(4,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
LSH_KNN(5,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)

"""### Memory related information for imgs=10"""

LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,10,40,0.8)
print(" ")
LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,10,40,0.9)
print(" ")
LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,10,60,0.8)
print(" ")
LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,10,60,0.9)
print(" ")

"""### Memory related information for imgs=60"""

LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,60,40,0.8)
print(" ")
LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,60,40,0.9)
print(" ")
LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,60,60,0.8)
print(" ")
LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,60,60,0.9)
print(" ")

"""### Memory related information for imgs=90"""

LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(1,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")

LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(2,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")

LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(3,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")

LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(4,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")

LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,90,40,0.8)
print(" ")
LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,90,40,0.9)
print(" ")
LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,90,60,0.8)
print(" ")
LSH_Information(5,3,tr_images,tr_labels,te_images,te_labels,90,60,0.9)
print(" ")